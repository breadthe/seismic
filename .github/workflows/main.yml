name: Release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        # ubuntu-latest = ubuntu-20.04
        # platform: [macos-latest, ubuntu-latest, windows-latest]
        platform: [macos-latest]
    runs-on: ${{ matrix.platform }}
    env:
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install app dependencies and build web
        # Remove `&& yarn build` if you build your frontend in `beforeBuildCommand`
        run: npm install # yarn && yarn build

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: 'Seismic v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false

      - name: Remove useless folders
        run: |
            rm -rf src-tauri/target/release/build
            rm -rf src-tauri/target/release/deps
            rm -rf src-tauri/target/release/bundle/appimage/seismic.AppDir
            npm run rename
        shell: bash

      - name: Get the latest release
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
            route: GET /repos/:repository/releases?per_page=1
            repository: ${{ github.repository }}
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get upload url
        id: get_upload_url
        run: >
            url=$(echo "$response" | jq -r ".[0].upload_url")

            echo "::set-output name=url::$url"
        env:
            response: ${{ steps.get_latest_release.outputs.data }}
        shell: bash

      - name: Get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
            path: package.json
            prop_path: version

      # Mac
      - name: Upload the mac installer asset
        if: runner.os == 'macOS'
        # uses: softprops/action-gh-release@v1
        uses: actions/upload-release-asset@v1.0.2
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            node-version: 16
            upload_url: ${{steps.get_upload_url.outputs.url}}
            asset_path: ./src-tauri/target/release/upload/seismic-${{steps.version.outputs.prop}}-macos-x64.dmg
            asset_name: seismic-${{steps.version.outputs.prop}}-macos-x64.dmg
            asset_content_type: application/octet-stream

      # Windows
      - name: Upload the windows installer asset
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{steps.get_upload_url.outputs.url}}
            asset_path: ./src-tauri/target/release/upload/seismic-${{steps.version.outputs.prop}}-windows-x64.msi
            asset_name: seismic-${{steps.version.outputs.prop}}-windows-x64.msi
            asset_content_type: application/octet-stream

      # Linux
      - name: Upload the linux installer asset
        if: runner.os == 'Linux'
        uses: softprops/action-gh-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{steps.get_upload_url.outputs.url}}
            asset_path: ./src-tauri/target/release/upload/seismic-${{steps.version.outputs.prop}}-linux-x64.appimage
            asset_name: seismic-${{steps.version.outputs.prop}}-linux-x64.appimage
            asset_content_type: application/octet-stream
      - name: Upload the linux installer asset
        if: runner.os == 'Linux'
        uses: softprops/action-gh-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{steps.get_upload_url.outputs.url}}
            asset_path: ./src-tauri/target/release/upload/seismic-${{steps.version.outputs.prop}}-linux-x64.deb
            asset_name: seismic-${{steps.version.outputs.prop}}-linux-x64.deb
            asset_content_type: application/octet-stream

      - name: Hash
        run: cat ./src-tauri/target/release/upload/seismic-${{steps.version.outputs.prop}}-${{matrix.NAME}}-x64.sig
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
            name: seismic-${{matrix.NAME}}-x64-installer-portable
            path: src-tauri/target/release
